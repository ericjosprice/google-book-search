{"version":3,"sources":["components/Jumbotron/index.js","utils/API.js","components/BookResult/index.js","components/SearchResults/index.js","pages/Saved.js","components/SearchForm/index.js","pages/Search.js","components/Navbar/index.js","components/Footer/index.js","components/Wrapper/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Jumbotron","react_default","a","createElement","className","API","getBooks","axios","get","searchBooks","title","console","log","post","addBookToDB","bookData","deleteBook","id","delete","concat","BookResult","state","saved","deleted","handleSaveClick","e","_this","props","authors","join","link","img","description","preventDefault","then","response","catch","err","handleDeleteClick","setState","Router","dispatch","location","this","style","display","href","target","rel","type","name","path","onClick","disabled","src","smallThumbnail","thumbnail","alt","React","Component","SearchResults","map","book","bookInfo","volumeInfo","components_BookResult","canonicalVolumeLink","imageLinks","key","savedBooks","image","_id","Saved","componentWillMount","data","components_SearchResults","match","SearchForm","htmlFor","form","onChange","handleInputChange","placeholder","required","handleFormSubmit","Search","bookInput","value","components_SearchForm","length","Navbar","react_router_dom","to","exact","activeClassName","Footer","Wrapper","Object","assign","App","components_Navbar","components_Jumbotron","components_Wrapper","react_router","component","components_Footer","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.746baa14.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n\nfunction Jumbotron(){\n    return(\n        <div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"title\">\n            <h1>React Google Book Search</h1>\n            <h4>Search for Books and save books to your View Later list.</h4>\n        </div>\n        </div>\n\n    );\n}\n\nexport default Jumbotron;\n\n","import axios from \"axios\";\n\nexport default {\n    getBooks: () => {\n        return axios.get(\"/api/books\");\n    },\n    searchBooks: (title) => {\n        console.log(title);\n        return axios.post(\"/search\", {title: title});\n    },\n    addBookToDB: (bookData) => {\n        return axios.post(\"/api/books\", bookData);\n    },\n    deleteBook: (id) => {\n        return axios.delete(`/api/books/${id}`);\n    }\n}","import React from \"react\";\nimport API from \"../../utils/API\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport \"./style.css\";\n\nclass BookResult extends React.Component {\n    \n  state = {\n            saved: false,\n            deleted: false\n        \n    }\n\n    handleSaveClick = (e) =>{\n        // this.setState({saved: true});\n        const bookData = {\n            title: this.props.title,\n            authors: this.props.authors.join(\",\"),\n            link: this.props.link,\n            img: this.props.img,\n            description: this.props.description\n        }\n        console.log(bookData)\n        e.preventDefault();\n        API.addBookToDB(bookData).then(\n            (response) => {\n                console.log(response);\n            }\n        ).catch(\n            (err) => {\n                console.log(err);\n            }\n        );\n    }\n\n    handleDeleteClick = (e) => {\n        this.setState({deleted: true});\n        e.preventDefault();\n        API.deleteBook(this.props.id).then(\n            (response) => {\n                console.log(response);\n                Router.dispatch(this.props.location, null)\n            }\n        ).catch(\n            (err) => {\n                console.log(err);\n            }\n        );\n    }\n\n    render() {\n        return(\n            \n                <div className=\"bookResult\" id={(this.props.id)? this.props.id: null} style={{display: this.state.deleted? \"none\" : \"block\"}}>\n                    <div className=\"row\">\n                        <div className=\"aboutBook\">\n                            <h4>{this.props.title}</h4>\n                            <p>By: {(this.props.authors)? this.props.authors: \"N/A\"}</p>\n                        </div>\n                        <div className=\"btnDiv\">\n                            {\n                                // if link to book exists include View button else do not\n                                (this.props.link)? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\"><button type=\"button\" name=\"view\">View</button></a> : null\n                            }\n                            {\n                                // this.props.path === \"/\" display save button else display Delete button\n                                (this.props.path === \"/\")? <button type=\"button\" name=\"save\" onClick={this.handleSaveClick} disabled={this.state.saved}>{(this.state.saved)? \"Saved\" : \"Save\"}</button> : <button type=\"button\" name=\"Delete\" onClick={this.handleDeleteClick} disabled={this.state.deleted}>Delete</button>\n                            }\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        {(this.props.img)? <img src= {\n                            // if smallthubmail exists on this.props.img use that else if thumbnail exists on this.props.img use that else leave src empty\n                            (this.props.img.smallThumbnail)? this.props.img.smallThumbnail:\n                            (this.props.img.thumbnail)? this.props.img.thumbnail: \"\"\n                        } alt=\"book cover\"/>: null}\n                        <p>{(this.props.description)? this.props.description: \"N/A\"}</p>\n                    </div>\n                </div>\n          \n        );\n    }\n}\n\nexport default BookResult;","import React from \"react\";\nimport \"./style.css\";\nimport BookResult from \"../BookResult\";\n\nfunction SearchResults(props) {\n    if(props.path === \"/\") {\n        return(\n            <div className=\"SearchResults\">\n                <h3>Results Found</h3>\n                {props.bookData.map((book) => {\n                    const bookInfo = book.volumeInfo;\n                    return <BookResult\n                    title={bookInfo.title}\n                    authors={bookInfo.authors}\n                    description={bookInfo.description}\n                    link={bookInfo.canonicalVolumeLink}\n                    img={bookInfo.imageLinks}\n                    path={props.path}\n                    key={book.id}/>\n                })}\n            </div>\n        );\n    } else if(props.path === \"/saved\") {\n        if(props.savedBooks) {\n            return(\n                <div id=\"resultsContainer\">\n                    <h3>Saved Books</h3>\n                    {props.savedBooks.map((book) => {\n                        return <BookResult\n                        title={book.title}\n                        authors={book.authors}\n                        description={book.description}\n                        link={book.link}\n                        img={book.image}\n                        id={book._id}\n                        path={props.path}\n                        key={book._id}/>\n                    })}\n                </div>\n            );\n        } else {\n            return(\n                 <div className=\"SearchResults\">\n                    <h3>Saved Books</h3>\n                    <p>No saved books.</p>\n                </div>\n            );\n        }\n    }\n}\n\nexport default SearchResults;","\nimport React from \"react\";\nimport SearchResults from \"../components/SearchResults\";\nimport API from \"../utils/API\";\n\nclass Saved extends React.Component {\n    state = {\n            savedBooks: []\n        }\n\n    componentWillMount = () => {\n        API.getBooks().then(\n            (response) => {\n                this.setState({savedBooks: response.data});\n            }\n        ).catch(\n            (err) => {\n                console.log(err);\n            }\n        );\n    }\n\n    render() {\n        // console.log(this.state.savedBooks);\n        return(\n            <div className=\"container\">\n            \n                <SearchResults savedBooks={this.state.savedBooks} path={this.props.match.path}/>\n           \n            </div>\n        );\n    }\n}\n\nexport default Saved;\n","import React from \"react\";\n\nfunction SearchForm(props) {\n    return(\n        <div id=\"searchContainer\">\n            <h3>Book Search</h3>\n            <form id=\"bookSearch\">\n                <label htmlFor=\"bookInput\" form=\"bookSearch\">Enter a book to search:</label>\n                <br></br>\n                <input type=\"text\" name=\"bookInput\" id=\"bookInput\" form=\"bookSearch\" onChange={(e) => props.handleInputChange(e)} placeholder=\"Book Title\" required/>\n                <br></br>\n                <button type=\"submit\" onClick={(e) => props.handleFormSubmit(e)}>Search</button>\n            </form>\n        </div>\n    );\n}\n\nexport default SearchForm;","import React from \"react\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchResults from \"../components/SearchResults\";\nimport API from \"../utils/API\";\n\n\nclass Search extends React.Component {\n    \n        state = {\n            bookInput: \"\",\n            bookData: []\n        }\n\n    handleInputChange=(e) => {\n        e.preventDefault();\n        this.setState({bookInput: e.target.value})\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        API.searchBooks(this.state.bookInput)\n            .then(\n                (response) => {\n                    this.setState({bookData: response.data});\n                    this.setState({bookInput: \"\"});\n                }\n            );\n    }\n  render() {\n    // console.log(this.state)\n    \n        return(\n            <div className=\"container\">\n                <SearchForm handleInputChange={this.handleInputChange} handleFormSubmit={this.handleFormSubmit} />\n                <hr/>\n                {(this.state.bookData.length > 0 )?\n                    <SearchResults bookData={this.state.bookData} path={this.props.match.path}/> : <div></div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Search;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./style.css\";\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\n\n// the active links did not work like the examples provided in class, which dont work either. I added NavLink, instead of Link, and the exact prop to the root link to remedy this. \nfunction Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand navbar-light bg-light\" >\n      <NavLink className=\"navbar-brand\" to=\"/\">\n        Google-Book-Search\n      </NavLink>\n      <div>\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <NavLink\n              to=\"/\"\n              exact className=\"nav-link\" activeClassName=\"active\" \n               >\n              Search\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink\n              to=\"/saved\"\n              className=\"nav-link\" activeClassName=\"active\" \n              >\n              Saved\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span>Google-Book-Search</span>\n    </footer>\n  );\n}\n\nexport default Footer;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;","import React from \"react\";\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Saved from \"./pages/Saved\";\nimport Search from \"./pages/Search\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport Wrapper from \"./components/Wrapper\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Jumbotron />\n        <Wrapper>\n            <Route exact path=\"/\" component={Search} />\n            <Route exact path=\"/search\" component={Search} />\n            <Route exact path=\"/saved\" component={Saved} />\n        </Wrapper>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}