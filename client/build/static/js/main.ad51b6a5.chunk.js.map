{"version":3,"sources":["components/Jumbotron/index.js","components/SearchForm/index.js","utils/API.js","components/BookResult/index.js","components/SearchResults/index.js","pages/Saved.js","pages/Search.js","components/Navbar/index.js","components/Footer/index.js","components/Wrapper/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Jumbotron","react_default","a","createElement","className","SearchForm","props","id","htmlFor","form","type","name","onChange","e","handleInputChange","placeholder","required","onClick","handleFormSubmit","API","getBooks","axios","get","searchBooks","title","console","log","post","addBookToDB","bookData","deleteBook","delete","concat","BookResult","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSaveClick","authors","join","link","img","description","preventDefault","then","response","catch","err","state","saved","deleted","bind","assertThisInitialized","handleDeleteClick","_this2","setState","Router","dispatch","location","style","display","href","target","rel","path","disabled","src","smallThumbnail","thumbnail","alt","React","Component","SearchResults","map","book","bookInfo","volumeInfo","components_BookResult","canonicalVolumeLink","imageLinks","key","savedBooks","length","_id","Saved","bookInput","handleDelete","res","data","_this3","components_SearchForm","components_SearchResults","match","Search","value","Navbar","react_router_dom","to","window","pathname","Footer","Wrapper","assign","App","components_Navbar","components_Jumbotron","components_Wrapper","react_router","exact","component","components_Footer","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ad51b6a5.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Jumbotron(){\n    return(\n        <div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n            <h1 className=\"display-4\">React Google Book Search</h1>\n            <p className=\"lead\">Search for and save books of interest</p>\n        </div>\n        </div>\n\n    );\n}\n\nexport default Jumbotron;\n\n","import React from \"react\";\n\nfunction SearchForm(props) {\n    return(\n        <div id=\"searchContainer\">\n            <h3>Book Search</h3>\n            <form id=\"bookSearch\">\n                <label htmlFor=\"bookInput\" form=\"bookSearch\">Enter a book to search:</label>\n                <br></br>\n                <input type=\"text\" name=\"bookInput\" id=\"bookInput\" form=\"bookSearch\" onChange={(e) => props.handleInputChange(e)} placeholder=\"Book Title\" required/>\n                <br></br>\n                <button type=\"submit\" onClick={(e) => props.handleFormSubmit(e)}>Search</button>\n            </form>\n        </div>\n    );\n}\n\nexport default SearchForm;","// import axios from \"axios\";\n\n// // The getBooks method retrieves recipes from the server\n// // It accepts a \"query\" or term to search the books api for\n// export default {\n//   getRecipes: function(query) {\n//     return axios.get(\"/api/books\", { params: { q: query } });\n//   }\n// };\n\nimport axios from \"axios\";\n\nexport default {\n    getBooks: () => {\n        return axios.get(\"/api/books\");\n    },\n    searchBooks: (title) => {\n        console.log(title);\n        return axios.post(\"/search\", {title: title});\n    },\n    addBookToDB: (bookData) => {\n        return axios.post(\"/api/books\", bookData);\n    },\n    deleteBook: (id) => {\n        return axios.delete(`/api/books/${id}`);\n    }\n}\n\n// export default {\n//     getRandomDog: function() {\n//       return axios.get(\"https://dog.ceo/api/breeds/image/random\");\n//     },\n//     getDogsOfBreed: function(breed) {\n//       return axios.get(\"https://dog.ceo/api/breed/\" + breed + \"/images\");\n//     },\n//     getBaseBreedsList: function() {\n//       return axios.get(\"https://dog.ceo/api/breeds/list\");\n//     }\n//   };","import React from \"react\";\nimport API from \"../../utils/API\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nclass BookResult extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            saved: false,\n            deleted: false\n        }\n        this.handleInputChange = this.handleSaveClick.bind(this);\n        this.handleDeleteClick = this.handleDeleteClick.bind(this);\n        this.handleSaveClick = this.handleSaveClick.bind(this);\n    }\n\n    handleSaveClick = function(e) {\n        // this.setState({saved: true});\n        const bookData = {\n            title: this.props.title,\n            authors: this.props.authors.join(\",\"),\n            link: this.props.link,\n            img: this.props.img,\n            description: this.props.description\n        }\n        console.log(bookData)\n        e.preventDefault();\n        API.addBookToDB(bookData).then(\n            (response) => {\n                console.log(response);\n            }\n        ).catch(\n            (err) => {\n                console.log(err);\n            }\n        );\n    }\n\n    handleDeleteClick(e) {\n        this.setState({deleted: true});\n        e.preventDefault();\n        API.deleteBook(this.props.id).then(\n            (response) => {\n                console.log(response);\n                Router.dispatch(this.props.location, null)\n            }\n        ).catch(\n            (err) => {\n                console.log(err);\n            }\n        );\n    }\n\n    render() {\n        return(\n            <div className=\"bookResult\" id={(this.props.id)? this.props.id: null} style={{display: this.state.deleted? \"none\" : \"block\"}}>\n                <div className=\"row\">\n                    <div className=\"aboutBook\">\n                        <h4>{this.props.title}</h4>\n                        <p>By: {(this.props.authors)? this.props.authors.join(\", \"): \"N/A\"}</p>\n                    </div>\n                    <div className=\"btnDiv\">\n                        {\n                            // if link to book exists include View button else do not\n                            (this.props.link)? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\"><button type=\"button\" name=\"view\">View</button></a> : null\n                        }\n                        {/* {\n                            // if this.props.path is \"/\" display save button else display Delete button\n                            (this.props.path === \"/\")? <button type=\"button\" name=\"save\" onClick={this.handleSaveClick} disabled={this.state.saved}>{(this.state.saved)? \"Saved\" : \"Save\"}</button> : <button type=\"button\" name=\"Delete\" onClick={this.handleDeleteClick} disabled={this.state.deleted}>Delete</button>\n                        } */}\n                        {\n                            // if this.props.path is \"/\" display save button else display Delete button\n                            (this.props.path === \"/\")? <button type=\"button\" name=\"save\" onClick={this.handleSaveClick} disabled={this.state.saved}>{(this.state.saved)? \"Saved\" : \"Save\"}</button> : <button type=\"button\" name=\"Save\" onClick={this.handleSaveClick} disabled={this.state.saved}>Save</button>\n                        }\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {(this.props.img)? <img src= {\n                        // if smallthubmail exists on this.props.img use that else if thumbnail exists on this.props.img use that else leave src empty\n                        (this.props.img.smallThumbnail)? this.props.img.smallThumbnail:\n                        (this.props.img.thumbnail)? this.props.img.thumbnail: \"\"\n                    } alt=\"book cover\"/>: null}\n                    <p>{(this.props.description)? this.props.description: \"N/A\"}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BookResult;","import React from \"react\";\nimport \"./style.css\";\nimport BookResult from \"../BookResult\";\n\nfunction SearchResults(props) {\n    if(props.path === \"/search\") {\n        return(\n            <div className=\"SearchResults\">\n                <h3>Results Found</h3>\n                {props.bookData.map((book) => {\n                    const bookInfo = book.volumeInfo;\n                    return <BookResult\n                    title={bookInfo.title}\n                    authors={bookInfo.authors}\n                    description={bookInfo.description}\n                    link={bookInfo.canonicalVolumeLink}\n                    img={bookInfo.imageLinks}\n                    path={props.path}\n                    key={book.id}/>\n                })}\n            </div>\n        );\n    } else if(props.path === \"/saved\") {\n        if(props.savedBooks.length > 0) {\n            return(\n                <div id=\"resultsContainer\">\n                    <h3>Saved Books</h3>\n                    {props.savedBooks.map((book) => {\n                        return <BookResult\n                        title={book.title}\n                        authors={book.authors}\n                        description={book.description}\n                        link={book.link}\n                        img={book.img}\n                        id={book._id}\n                        path={props.path}\n                        key={book._id}/>\n                    })}\n                </div>\n            );\n        } else {\n            return(\n                 <div className=\"SearchResults\">\n                    <h3>Saved Books</h3>\n                    <p>No saved books.</p>\n                </div>\n            );\n        }\n    }\n}\n\nexport default SearchResults;","import React from \"react\";\nimport SearchForm from \"../components/SearchForm\";\n// import ResultsContainer from \"../components/ResultsContainer\";\n// import Container from \"../components/Container\";\nimport SearchResults from \"../components/SearchResults\";\nimport API from \"../utils/API\";\n\n\nclass Saved extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookInput: \"\",\n            bookData: []\n        }\n        this.handleDelete = this.handleDelete.bind(this);\n    }\ncomponentDidMount(){\n    API.getBooks().then(res =>  console.log(\"res from saved js\", res))\n\n}\n\n    handleView(e) {\n        e.preventDefault();\n        API.searchBooks(this.state.bookInput)\n            .then(\n                (response) => {\n                    this.setState({bookData: response.data});\n                    this.setState({bookInput: \"\"});\n                }\n            );\n    }\n    handleDelete(e) {\n        e.preventDefault();\n        API.searchBooks(this.state.bookInput)\n            .then(\n                (response) => {\n                    this.setState({bookData: response.data});\n                    this.setState({bookInput: \"\"});\n                }\n            );\n    }\n  render() {\n    // console.log(this.state)\n    \n        return(\n            <div>\n                <SearchForm handleInputChange={this.handleInputChange} handleFormSubmit={this.handleFormSubmit} />\n                {(this.state.bookData.length >0 )?\n                    <SearchResults bookData={this.state.bookData} path={this.props.match.path}/> : <div></div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Saved;","import React from \"react\";\nimport SearchForm from \"../components/SearchForm\";\n// import ResultsContainer from \"../components/ResultsContainer\";\n// import Container from \"../components/Container\";\nimport SearchResults from \"../components/SearchResults\";\nimport API from \"../utils/API\";\n\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookInput: \"\",\n            bookData: []\n        }\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(e) {\n        e.preventDefault();\n        this.setState({bookInput: e.target.value})\n    }\n\n    handleFormSubmit(e) {\n        e.preventDefault();\n        API.searchBooks(this.state.bookInput)\n            .then(\n                (response) => {\n                    this.setState({bookData: response.data});\n                    this.setState({bookInput: \"\"});\n                }\n            );\n    }\n  render() {\n    console.log(this.state)\n    \n        return(\n            <div>\n                <SearchForm handleInputChange={this.handleInputChange} handleFormSubmit={this.handleFormSubmit} />\n                {(this.state.bookData.length >0 )?\n                    <SearchResults bookData={this.state.bookData} path={this.props.match.path}/> : <div></div>\n                }\n            </div>\n        );\n    }\n  //   return (\n  //     <div>\n  //       <Container style={{ minHeight: \"80%\" }}>\n  //           <h1 className=\"text-center\">Search for a book</h1>\n  //             <SearchForm\n  //               handleFormSubmit={this.handleFormSubmit}\n  //               handleInputChange={this.handleInputChange}\n  //               books={this.state.books}\n  //             />\n  //           <SearchResults results={this.state.results} path={this.props.match.path} />\n  //         </Container>\n  //     </div>\n  //   );\n  // }\n\n   \n}\n\nexport default Search;\n\n/////////////////////\n\n\n\n\n// import React, { Component } from \"react\";\n// // import API from \"../utils/API\";\n// import SearchForm from \"../components/SearchForm\";\n// import SearchResults from \"../components/SearchResults\";\n// import Container from \"../components/Container\";\n// import API from \"../utils/API\"\n\n// class Search extends Component {\n//   state = {\n//     search: \"\",\n//     books: [],\n//     results: [],\n//     error: \"\"\n//   };\n\n//   // When the component mounts, get a list of harry potter books and update this.state.books\n//   componentDidMount() {\n//     this.searchBookOnLoad(\"Harry Potter\");\n//   }\n\n//   searchBookOnLoad = query => {\n//     API.search(query)\n//     .then(res => this.setState({ books: res.data.message }))\n//     .catch(err => console.log(err));\n//   };\n\n//   handleInputChange = event => {\n//     this.setState({ search: event.target.value });\n//   };\n\n//   handleFormSubmit = event => {\n//     event.preventDefault();\n//     API.getBooks(this.state.search)\n//       .then(res => {\n//         if (res.data.status === \"error\") {\n//           throw new Error(res.data.message);\n//         }\n//         this.setState({ results: res.data.message, error: \"\" });\n//       })\n//       .catch(err => this.setState({ error: err.message }));\n//   };\n//   render() {\n//     console.log(this.state)\n//     return (\n//       <div>\n//         <Container style={{ minHeight: \"80%\" }}>\n//             <h1 className=\"text-center\">Search for a book</h1>\n//               <SearchForm\n//                 handleFormSubmit={this.handleFormSubmit}\n//                 handleInputChange={this.handleInputChange}\n//                 books={this.state.books}\n//               />\n//             <SearchResults results={this.state.results} />\n//           </Container>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Search;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Google-Book-Search\n      </Link>\n      <div>\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link\n              to=\"/\"\n              className={\n                window.location.pathname === \"/\" || window.location.pathname === \"/about\"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            >\n              Search\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/saved\"\n              className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\n            >\n              Saved\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span>Google-Book-Search</span>\n    </footer>\n  );\n}\n\nexport default Footer;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Saved from \"./pages/Saved\";\nimport Search from \"./pages/Search\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport Wrapper from \"./components/Wrapper\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Jumbotron />\n        <Wrapper>\n          <Switch>\n            <Route exact path=\"/\" component={Search} />\n            <Route exact path=\"/search\" component={Search} />\n            <Route exact path=\"/saved\" component={Saved} />\n          </Switch>\n        </Wrapper>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}